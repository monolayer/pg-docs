import{_ as a,c as i,a2 as e,o as t}from"./chunks/framework.C5GEIE5F.js";const c=JSON.parse('{"title":"Identity Columns","description":"","frontmatter":{},"headers":[],"relativePath":"guide/schema-definition/columns/identity-columns.md","filePath":"guide/schema-definition/columns/identity-columns.md"}'),n={name:"guide/schema-definition/columns/identity-columns.md"};function l(h,s,d,p,r,o){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="identity-columns" tabindex="-1">Identity Columns <a class="header-anchor" href="#identity-columns" aria-label="Permalink to &quot;Identity Columns&quot;">​</a></h1><p>An identity column is a special column that is generated automatically from an implicit sequence. It can be used to generate key values.</p><p>It&#39;s PostgreSQL native implementation of <a href="./data-types.html#serial"><code>serial</code></a> and <a href="./data-types.html#bigserial"><code>bigserial</code></a> data types in other SQL implementations.</p><p>The following column data types can be used as identity columns:</p><ul><li><a href="./data-types.html#smallint">smallint</a></li><li><a href="./data-types.html#integer">integer</a></li><li><a href="./data-types.html#bigint">bigint</a></li></ul><p>There are two types identity columns: <code>GENERATED ALWAYS AS</code> and <code>GENERATED BY DEFAULT AS</code>. They mainly differ in whether the database will allow you to override the generated value when inserting data.</p><ul><li><p><code>GENERATED ALWAYS AS</code> columns are values always generated by the database, and you cannot override the generated value when inserting a new row (expect when using the <code>OVERRIDING SYSTEM VALUE</code> clause).</p></li><li><p><code>GENERATED BY DEFAULT AS</code> columns values are generated by the database it be overridden by an explicit value value.</p></li></ul><h2 id="generated-always-as-identity-column" tabindex="-1">Generated always as identity column <a class="header-anchor" href="#generated-always-as-identity-column" aria-label="Permalink to &quot;Generated always as identity column&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { table, text } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@monolayer/pg/schema&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  columns: {</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generatedAlwaysAsIdentity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="generated-by-default-as-identity-column" tabindex="-1">Generated by default as identity column <a class="header-anchor" href="#generated-by-default-as-identity-column" aria-label="Permalink to &quot;Generated by default as identity column&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> accounts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  columns: {</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generatedByDefaultAsIdentity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,11)]))}const y=a(n,[["render",l]]);export{c as __pageData,y as default};
