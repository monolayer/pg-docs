import{_ as t,c as a,a2 as o,o as r}from"./chunks/framework.BBV1ZMcZ.js";const m=JSON.parse('{"title":"Function: columnWithType()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/schema/functions/columnWithType.md","filePath":"reference/api/schema/functions/columnWithType.md"}'),c={name:"reference/api/schema/functions/columnWithType.md"};function d(n,e,h,l,i,s){return r(),a("div",null,e[0]||(e[0]=[o('<p><a href="./../../modules.html">monolayer</a> / <a href="./../">schema</a> / columnWithType</p><h1 id="function-columnwithtype" tabindex="-1">Function: columnWithType() <a class="header-anchor" href="#function-columnwithtype" aria-label="Permalink to &quot;Function: columnWithType()&quot;">​</a></h1><blockquote><p><strong>columnWithType</strong>&lt;<code>S</code>, <code>I</code>&gt;(<code>dataType</code>): <a href="./../classes/pgColumnWithType.html"><code>pgColumnWithType</code></a>&lt;<code>S</code>, <code>I</code>&gt;</p></blockquote><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th><th>Default type</th></tr></thead><tbody><tr><td><code>S</code></td><td>-</td></tr><tr><td><code>I</code></td><td><code>S</code></td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>dataType</code></td><td><code>string</code></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../classes/pgColumnWithType.html"><code>pgColumnWithType</code></a>&lt;<code>S</code>, <code>I</code>&gt;</p>',9)]))}const u=t(c,[["render",d]]);export{m as __pageData,u as default};
