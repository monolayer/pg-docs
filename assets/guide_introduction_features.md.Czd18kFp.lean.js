import{_ as i,c as d,a2 as a,o as t}from"./chunks/framework.C5GEIE5F.js";const c=JSON.parse('{"title":"Features","description":"","frontmatter":{"aside":false},"headers":[],"relativePath":"guide/introduction/features.md","filePath":"guide/introduction/features.md"}'),s={name:"guide/introduction/features.md"};function v(l,e,r,o,n,p){return t(),d("div",null,e[0]||(e[0]=[a('<h1 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">â€‹</a></h1><br><div style="display:flex;flex-direction:column;gap:1em;margin-left:1em;"><div style="display:flex;gap:1em;"><div>âœ…</div><div>Built for PostgreSQL.</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>Declarative, type-safe database schema definition.</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>Splits migrations based on their intended change (expand, alter, or contract the database schema).</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>Easy to integrate database schema and data changes into Continuous Delivery workflows.</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>Type-safe database client(s) for `kysely` (no <i>codegen</i> ðŸŽ‰).</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>`Prisma` integration.</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>Comprehensive Zod validations for all supported data types (no <i>codegen</i> ðŸŽ‰) for `kysely`.</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>Non-blocking migrations by default.</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>Multiple databases support.</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>Multiple schemas per database support.</div></div><div style="display:flex;gap:1em;"><div>âœ…</div><div>Detailed warnings on backwards-incompatible, blocking,unsafe, or destructive changes.</div></div></div>',3)]))}const m=i(s,[["render",v]]);export{c as __pageData,m as default};
