import{_ as e,c as t,a2 as s,o}from"./chunks/framework.C5GEIE5F.js";const m=JSON.parse('{"title":"Type Alias: DatabaseSchema<T, S>","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/schema/type-aliases/DatabaseSchema.md","filePath":"reference/api/schema/type-aliases/DatabaseSchema.md"}'),l={name:"reference/api/schema/type-aliases/DatabaseSchema.md"};function r(d,a,i,c,n,h){return o(),t("div",null,a[0]||(a[0]=[s('<p><a href="./../../modules.html">monolayer</a> / <a href="./../">schema</a> / DatabaseSchema</p><h1 id="type-alias-databaseschema-t-s" tabindex="-1">Type Alias: DatabaseSchema&lt;T, S&gt; <a class="header-anchor" href="#type-alias-databaseschema-t-s" aria-label="Permalink to &quot;Type Alias: DatabaseSchema\\&lt;T, S\\&gt;&quot;">​</a></h1><blockquote><p><strong>DatabaseSchema</strong>&lt;<code>T</code>, <code>S</code>&gt;: <code>object</code></p></blockquote><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th></tr></thead><tbody><tr><td><code>T</code> <em>extends</em> <code>TableRecord</code></td></tr><tr><td><code>S</code> <em>extends</em> <code>string</code></td></tr></tbody></table><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="name" tabindex="-1">name? <a class="header-anchor" href="#name" aria-label="Permalink to &quot;name?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>name</strong>: <code>S</code></p></blockquote><p>Schema name.</p><h4 id="default" tabindex="-1">Default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;default&quot;</span></span></code></pre></div><h3 id="tables" tabindex="-1">tables? <a class="header-anchor" href="#tables" aria-label="Permalink to &quot;tables?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>tables</strong>: <code>T</code></p></blockquote><p>Schema tables.</p><h4 id="default-1" tabindex="-1">Default <a class="header-anchor" href="#default-1" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span></span></code></pre></div><h3 id="types" tabindex="-1">types? <a class="header-anchor" href="#types" aria-label="Permalink to &quot;types?&quot;">​</a></h3><blockquote><p><code>optional</code> <strong>types</strong>: <a href="./../classes/EnumType.html"><code>EnumType</code></a>&lt;<code>any</code>&gt;[]</p></blockquote><p>Types in the schema.</p><h4 id="default-2" tabindex="-1">Default <a class="header-anchor" href="#default-2" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span></span></code></pre></div><h4 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h4><p>Only enumerated types are supported in v1.</p>',23)]))}const u=e(l,[["render",r]]);export{m as __pageData,u as default};
