import{_ as t,c as i,a2 as e,o as a}from"./chunks/framework.BBV1ZMcZ.js";const c=JSON.parse('{"title":"Function: zodSchema()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/schema/functions/zodSchema.md","filePath":"reference/api/schema/functions/zodSchema.md"}'),n={name:"reference/api/schema/functions/zodSchema.md"};function l(d,s,h,k,p,r){return a(),i("div",null,s[0]||(s[0]=[e(`<p><a href="./../../modules.html">monolayer</a> / <a href="./../">schema</a> / zodSchema</p><h1 id="function-zodschema" tabindex="-1">Function: zodSchema() <a class="header-anchor" href="#function-zodschema" aria-label="Permalink to &quot;Function: zodSchema()&quot;">​</a></h1><blockquote><p><strong>zodSchema</strong>&lt;<code>T</code>&gt;(<code>table</code>): <code>TableSchema</code>&lt;<code>T</code>&gt;</p></blockquote><p>Return a Zod schema for the table.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th></tr></thead><tbody><tr><td><code>T</code> <em>extends</em> <a href="./../classes/PgTable.html"><code>PgTable</code></a>&lt;<code>any</code>, <code>any</code>&gt;</td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>table</code></td><td><code>T</code></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>TableSchema</code>&lt;<code>T</code>&gt;</p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p>The schema will be for all columns defined in the table. You can use <code>extend</code>, <code>pick</code>, <code>omit</code>, or <code>shape</code> to adapt/expand the schema.</p><p><strong>Schema validations for all columns</strong></p><ul><li>Input and output values are optional by default.</li><li>Input and output types will be automatically inferred.</li><li>Explicit <code>undefined</code> values will result in an error.</li><li>Each column type has extended validation rules to allow only accepted values for the column type. Refer to each columm documentation for a description on the specific validation rules. For example, the schema for an <code>integer</code> column: <ul><li>Will not allow values lower than -2147483648.</li><li>Will not allow values greater that 2147483647.</li></ul></li><li>The schema will take into account account constraints, generated values and default data values. For example, a non-nullable, primary key column: <ul><li>Can&#39;t be null.</li><li>Input value and output values are required.</li></ul></li></ul><p><strong>Schema Types</strong></p><p>Each column has a TypeScript type for input and output values (parsed) in the schema. The output values match the select type for the column(except <code>bytea</code> columns *)</p><p>(*) Since <a href="https://nodejs.org/api/buffer.html" target="_blank" rel="noreferrer">Buffer</a> is a Node.js API, the schema will not coerce the input to Buffer for browser compatibility. The output type will be the same as the input type.</p><table tabindex="0"><thead><tr><th style="text-align:left;">Column</th><th style="text-align:center;">Input</th><th style="text-align:center;">Output</th></tr></thead><tbody><tr><td style="text-align:left;">bigint</td><td style="text-align:center;">  <code>bigint</code> | <code>number</code> | <code>string</code>  </td><td style="text-align:center;">  <code>string</code>   </td></tr><tr><td style="text-align:left;">bigserial</td><td style="text-align:center;">  <code>bigint</code> | <code>number</code> | <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">bit</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">bitVarying</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">boolean</td><td style="text-align:center;">  <code>boolean</code> | <code>Boolish</code>*  </td><td style="text-align:center;">  <code>boolean</code>  </td></tr><tr><td style="text-align:left;">bytea</td><td style="text-align:center;">  <code>Buffer</code> | <code>string</code>  </td><td style="text-align:center;">  <code>Buffer</code> | <code>string</code>  </td></tr><tr><td style="text-align:left;">characterVarying</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">character</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">cidr</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">date</td><td style="text-align:center;">  <code>Date</code> | <code>string</code>  </td><td style="text-align:center;">  <code>Date</code>  </td></tr><tr><td style="text-align:left;">doublePrecision</td><td style="text-align:center;">  <code>bigint</code> | <code>number</code> | <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">enumerated</td><td style="text-align:center;">  enum values  </td><td style="text-align:center;">  enum values  </td></tr><tr><td style="text-align:left;">inet</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">integer</td><td style="text-align:center;">  <code>number</code> | <code>string</code>  </td><td style="text-align:center;">  <code>number</code>  </td></tr><tr><td style="text-align:left;">json</td><td style="text-align:center;">  <code>JsonValue</code>*  </td><td style="text-align:center;">  <code>JsonValue</code>*  </td></tr><tr><td style="text-align:left;">jsonb</td><td style="text-align:center;">  <code>JsonValue</code>*  </td><td style="text-align:center;">  <code>JsonValue</code>*  </td></tr><tr><td style="text-align:left;">macaddr</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">macaddr8</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">numeric</td><td style="text-align:center;">  <code>bigint</code> | <code>number</code> | <code>string</code>  </td><td style="text-align:center;">  <code>number</code>  </td></tr><tr><td style="text-align:left;">real</td><td style="text-align:center;">  <code>bigint</code> | <code>number</code> | <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">serial</td><td style="text-align:center;">  <code>number</code> | <code>string</code>  </td><td style="text-align:center;">  <code>number</code>  </td></tr><tr><td style="text-align:left;">smallint</td><td style="text-align:center;">  <code>number</code> | <code>string</code>  </td><td style="text-align:center;">  <code>number</code>  </td></tr><tr><td style="text-align:left;">time</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">timeWithTimeZone</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">timestamp</td><td style="text-align:center;">  <code>Date</code> | <code>string</code>  </td><td style="text-align:center;">  <code>Date</code>  </td></tr><tr><td style="text-align:left;">timestampWithTimeZone</td><td style="text-align:center;">  <code>Date</code> | <code>string</code>  </td><td style="text-align:center;">  <code>Date</code>  </td></tr><tr><td style="text-align:left;">tsquery</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">tsvector</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">uuid</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr><tr><td style="text-align:left;">xml</td><td style="text-align:center;">  <code>string</code>  </td><td style="text-align:center;">  <code>string</code>  </td></tr></tbody></table><p>(*) <code>Boolish</code> and <code>JsonValue</code> are defined as follows:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Boolish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;false&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;yes&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;no&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;on&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;off&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsonArray</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsonValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsonValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unknown</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsonArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> userRole</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> enumType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user_role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> users</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  columns: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generatedAlwaysAsIdentity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    role: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enumerated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userRole).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    orderCount: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    createdAt: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timestampWithTimeZone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sql</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`now\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  constraints: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    primaryKey: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">primaryKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> schema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> zodSchema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(users);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InputType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> z</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> schema&gt;;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OutputType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> z</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> schema&gt;;</span></span></code></pre></div><p><code>InputType</code> will be:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InputType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> never</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;user&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  orderCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  createdAt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><code>OutputType</code> will be:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OutputType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> never</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  orderCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  role</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;user&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  createdAt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,26)]))}const g=t(n,[["render",l]]);export{c as __pageData,g as default};
