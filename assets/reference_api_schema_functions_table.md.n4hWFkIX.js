import{_ as t,c as a,a2 as o,o as r}from"./chunks/framework.BBV1ZMcZ.js";const b=JSON.parse('{"title":"Function: table()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/schema/functions/table.md","filePath":"reference/api/schema/functions/table.md"}'),d={name:"reference/api/schema/functions/table.md"};function c(n,e,l,s,i,h){return r(),a("div",null,e[0]||(e[0]=[o('<p><a href="./../../modules.html">monolayer</a> / <a href="./../">schema</a> / table</p><h1 id="function-table" tabindex="-1">Function: table() <a class="header-anchor" href="#function-table" aria-label="Permalink to &quot;Function: table()&quot;">​</a></h1><blockquote><p><strong>table</strong>&lt;<code>T</code>, <code>PK</code>&gt;(<code>definition</code>): <a href="./../classes/PgTable.html"><code>PgTable</code></a>&lt;<code>T</code>, <code>PK</code>&gt;</p></blockquote><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Type Parameter</th></tr></thead><tbody><tr><td><code>T</code> <em>extends</em> <code>ColumnRecord</code></td></tr><tr><td><code>PK</code> <em>extends</em> <code>string</code></td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><code>definition</code></td><td><a href="./../type-aliases/TableDefinition.html"><code>TableDefinition</code></a>&lt;<code>T</code>, <code>PK</code>&gt;</td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../classes/PgTable.html"><code>PgTable</code></a>&lt;<code>T</code>, <code>PK</code>&gt;</p>',9)]))}const p=t(d,[["render",c]]);export{b as __pageData,p as default};
