import{_ as a,c as i,a2 as s,o as t}from"./chunks/framework.BVrlcXZz.js";const u=JSON.parse('{"title":"Pushing schema changes","description":"","frontmatter":{},"headers":[],"relativePath":"guide/pushing-schema-changes.md","filePath":"guide/pushing-schema-changes.md"}'),n={name:"guide/pushing-schema-changes.md"};function o(h,e,l,p,d,c){return t(),i("div",null,e[0]||(e[0]=[s('<h1 id="pushing-schema-changes" tabindex="-1">Pushing schema changes <a class="header-anchor" href="#pushing-schema-changes" aria-label="Permalink to &quot;Pushing schema changes&quot;">​</a></h1><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><p>In development, run <code>push dev</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monolayer-pg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p><code>monolayer-pg</code> will introspect the schema defined in your application code and the actual database schema in your development database. Then, it will:</p><ul><li>Detect possible table and column renames and prompt you about those.</li><li>Analize the changes to be made.</li><li>Optimize the operations to minimize database blocking and downtime.</li><li>Execute SQL statements against the database to modify the schema to the desired state.</li><li>Rollback changes on error.</li></ul><h2 id="pushing-to-production" tabindex="-1">Pushing to production <a class="header-anchor" href="#pushing-to-production" aria-label="Permalink to &quot;Pushing to production&quot;">​</a></h2><p>To push schema changes in production databases use the <code>push prod</code> command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monolayer-pg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prod</span></span></code></pre></div><p><code>push prod</code> will ensure that any state recorded by <code>push dev</code> (such as table or column renames) is taken into account.</p><h2 id="migration-warnings" tabindex="-1">Migration warnings <a class="header-anchor" href="#migration-warnings" aria-label="Permalink to &quot;Migration warnings&quot;">​</a></h2><p>From time to time, <code>monolayer-pg</code> will have to push changes that could be lead to:</p><ul><li>Destructive changes.</li><li>Backwards incompatibility.</li><li>Block the database while applying the migration.</li><li>Potential failures during the migration process.</li></ul><p>For this reason, <code>monolayer-pg</code> will output a warning message to inform you about the potential issues and possible mitigation steps.</p>',14)]))}const g=a(n,[["render",o]]);export{u as __pageData,g as default};
