import{_ as t,c as l,a2 as i,b as p,w as s,a3 as o,B as r,o as n,G as h,a as d}from"./chunks/framework.C5GEIE5F.js";const C=JSON.parse('{"title":"Applying migrations","description":"","frontmatter":{},"headers":[],"relativePath":"guide/migration-system/applying-migrations.md","filePath":"guide/migration-system/applying-migrations.md"}'),g={name:"guide/migration-system/applying-migrations.md"};function c(k,a,m,y,u,F){const e=r("Mermaid");return n(),l("div",null,[a[1]||(a[1]=i('<h1 id="applying-migrations" tabindex="-1">Applying migrations <a class="header-anchor" href="#applying-migrations" aria-label="Permalink to &quot;Applying migrations&quot;">​</a></h1><h2 id="applying-all-pending-migrations" tabindex="-1">Applying all pending migrations <a class="header-anchor" href="#applying-all-pending-migrations" aria-label="Permalink to &quot;Applying all pending migrations&quot;">​</a></h2><p>You can apply all pending migrations with the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monolayer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --phase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span></span></code></pre></div><p>The command will run all phases in the following order:</p>',5)),(n(),p(o,null,{default:s(()=>[h(e,{id:"mermaid-13",class:"mermaid",graph:"flowchart%20LR%0A%20%20%20%20A%5Bexpand%5D%20--%3E%20B%5Balter%5D%20--%3E%20C%5Bdata%5D%20--%3E%20D%5Bcontract%5D%0A"})]),fallback:s(()=>a[0]||(a[0]=[d(" Loading... ")])),_:1})),a[2]||(a[2]=i(`<div class="warning custom-block"><p class="custom-block-title">Recommended only for development</p><p>It&#39;s recommended to run this command only while developing your application.</p><p>When deploying your application, you should use apply migration phases individually.</p></div><h2 id="applying-migration-phases-individually" tabindex="-1">Applying migration phases individually <a class="header-anchor" href="#applying-migration-phases-individually" aria-label="Permalink to &quot;Applying migration phases individually&quot;">​</a></h2><p>Each migration phase has a corresponding migration command in the CLI.</p><h3 id="expand-phase" tabindex="-1">Expand Phase <a class="header-anchor" href="#expand-phase" aria-label="Permalink to &quot;Expand Phase&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monolayer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --phase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> expand</span></span></code></pre></div><p><strong>Runs</strong>: all pending expand migrations by timestamp.</p><h3 id="alter-phase" tabindex="-1">Alter Phase <a class="header-anchor" href="#alter-phase" aria-label="Permalink to &quot;Alter Phase&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monolayer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --phase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alter</span></span></code></pre></div><p><strong>Runs</strong>: all pending <code>alter</code> migrations by timestamp.</p><p><strong>Dependencies</strong>: <code>expand</code> migrations. It will fail early if there are pending <code>expand</code> migrations.</p><h3 id="data-phase" tabindex="-1">Data Phase <a class="header-anchor" href="#data-phase" aria-label="Permalink to &quot;Data Phase&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monolayer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --phase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> data</span></span></code></pre></div><p><strong>Runs</strong>: all pending <code>data</code> migrations by timestamp.</p><p><strong>Dependencies</strong>: <code>expand</code> and <code>alter</code> migrations. It will fail early if there are pending <code>expand</code> or <code>alter</code> migrations.</p><h3 id="contract-phase" tabindex="-1">Contract Phase <a class="header-anchor" href="#contract-phase" aria-label="Permalink to &quot;Contract Phase&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monolayer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --phase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contract</span></span></code></pre></div><p><strong>Runs</strong>: all pending <code>contract</code> migrations by timestamp.</p><p><strong>Dependencies</strong>: <code>expand</code> and <code>alter</code> migrations. It will fail early if there are pending <code>expand</code> or <code>alter</code> migrations.</p><h3 id="contract-phase-single-migration" tabindex="-1">Contract Phase - Single Migration <a class="header-anchor" href="#contract-phase-single-migration" aria-label="Permalink to &quot;Contract Phase - Single Migration&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monolayer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --phase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contract</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> single</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">migration-name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><strong>Runs</strong>: a single <code>contract</code> migration.</p><p><strong>Dependencies</strong>: <code>expand</code> and <code>alter</code> migrations. It will fail early if there are pending <code>expand</code> or <code>alter</code> migrations.</p><h2 id="migration-warnings" tabindex="-1">Migration warnings <a class="header-anchor" href="#migration-warnings" aria-label="Permalink to &quot;Migration warnings&quot;">​</a></h2><p>From time to time, <code>monolayer-pg</code> will have to generate a migration that could be lead to:</p><ul><li>Destructive changes.</li><li>Backwards incompatibility.</li><li>Block the database while applying the migration.</li><li>Potential failures during the migration process.</li></ul><p>For this reason, <code>monolayer-pg</code> will generate a warning message to inform you about the potential issues that could be caused by the migration, and possible mitigation steps.</p><p>Here&#39;s an example of a warning message generated by <code>monolayer-pg</code> when adding a <code>NOT NULL</code> constraint to an existing column:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>│</span></span>
<span class="line"><span>▲   WARNING  Migration might fail</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>│  - Changed column to non-nullable (column: &#39;name&#39; table: &#39;users&#39; schema: &#39;public&#39;)</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>│  Making a column non-nullable on an existing table may fail if the column contains \`NULL\` values.</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>│  How to prevent a migration failure and application downtime:</span></span>
<span class="line"><span>│    1. Remove \`NULL\` values from the column.</span></span>
<span class="line"><span>│    2. Ensure existing applications always insert non \`NULL\` values into the column.</span></span>
<span class="line"><span>│    3. Make the column non-nullable.</span></span></code></pre></div><h2 id="rolling-back-migrations" tabindex="-1">Rolling back migrations <a class="header-anchor" href="#rolling-back-migrations" aria-label="Permalink to &quot;Rolling back migrations&quot;">​</a></h2><p>You can rollback migrations with the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monolayer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migrations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rollback</span></span></code></pre></div><p>The command will prompt you to select a migration to rollback to.</p><div class="warning custom-block"><p class="custom-block-title">Recommended only for development</p><p>You should use this command only while developing your application.</p><p>In the event that migrations fail in production environments, it&#39;s best to always move forward by fixing the underlying issue and then either re-apply migrations or generate new ones.</p></div>`,33))])}const v=t(g,[["render",c]]);export{C as __pageData,v as default};
