import{_ as a,c as e,a2 as n,o as i}from"./chunks/framework.BBV1ZMcZ.js";const m=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"guide/schema-definition/constraints/intro.md","filePath":"guide/schema-definition/constraints/intro.md"}'),o={name:"guide/schema-definition/constraints/intro.md"};function r(s,t,l,c,u,h){return i(),e("div",null,t[0]||(t[0]=[n('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">â€‹</a></h1><p>Besides limiting the kind of data that can be stored in a table with column data types, we can apply <strong>constraints</strong> to have a greater control over the data in the tables.</p><p>With constraints you can require that values in a column or a group of columns:</p><ul><li>Must not assume the null value (<a href="./not-null.html">not-null constraints</a>)</li><li>Can be used as a unique identifier for rows in the table. (<a href="./primary-key.html">primary keys</a>)</li><li>Are unique among all the rows in the table. (<a href="./unique.html">unique constraints</a>)</li><li>Match the values appearing in some row of another table. (<a href="./foreign-key.html">foreign keys</a>)</li><li>Satisfy a Boolean expression. (<a href="./check.html">check constraints</a>)</li></ul><p>When attempting to store data in a column that violates a constraint, the database raises an error.</p>',5)]))}const p=a(o,[["render",r]]);export{m as __pageData,p as default};
